#include <iostream>
#include <vector>
#include <numeric>

namespace your_namespace {
    class Solution {
    public:
        int pivotIndex(std::vector<int>& nums) {
            int right_sum = std::accumulate(nums.begin(), nums.end(), 0); 
            int left_sum = 0;
            for (int i = 0; i < nums.size(); i++) {
                right_sum -= nums[i];
                if (left_sum == right_sum) {
                    return i;
                }
                left_sum += nums[i];
            }
            return -1;
        }
    };
}

int main() {
    std::vector<int> nums = {1, 7, 3, 6, 5, 6};
    
    your_namespace::Solution solution;
    int result = solution.pivotIndex(nums);
    
    if (result != -1) {
        std::cout << "Pivot index is: " << result << std::endl;
    } else {
        std::cout << "No pivot index found." << std::endl;
    }
    
    return 0;
}
